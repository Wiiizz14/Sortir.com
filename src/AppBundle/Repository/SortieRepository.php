<?php

namespace AppBundle\Repository;

use AppBundle\Entity\Participant;
use AppBundle\Entity\Site;
use AppBundle\Entity\Sortie;
use DateTime;

/**
 * SortieRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class SortieRepository extends \Doctrine\ORM\EntityRepository
{
    /**
     * @param $idSite
     * @return array
     * @throws \Exception
     */
    public function getSortiesOnlyBySite($idSite)
    {

        $em = $this->getEntityManager('s');
        $queryBuilder = $em->createQueryBuilder();
        $queryBuilder->select('s')
            ->from(Sortie::class, 's')
            ->innerJoin("s.site", "site", "WITH", "site.id = :idSite")
            ->where("s.dateCloture >= :date")
            ->setParameter("idSite", $idSite)
            ->setParameter('date', new DateTime("-30 days"));
        return $queryBuilder->getQuery()->getResult();
    }

    /**
     * @param $user
     * @param $idSite
     * @return array
     */
    public function getSortiesByOrganisateur($user, $idSite)
    {

        $em = $this->getEntityManager('s');
        $queryBuilder = $em->createQueryBuilder();
        $queryBuilder->select('s')
            ->from(Sortie::class, 's')
            ->innerJoin("s.site", "site", "WITH", "site.id = :idSite")
            ->innerJoin("s.organisateur", "p", "WITH", "p = :idUser")
            ->andWhere("s.site.id = :idSite")
            ->setParameter("idUser", $user->getId())
            ->setParameter("idSite", $idSite);

        return $queryBuilder->getQuery()->getResult();
    }

    public function getSortiesByRegistering($user)
    {

        $em = $this->getEntityManager('s');
        $queryBuilder = $em->createQueryBuilder();

        $queryBuilder->select ('s')
            ->from(Sortie::class, 's')
            ->innerJoin('s.participants',"p")
            ->where('p.id = :id')
            ->setParameter("id", $user);

        return $queryBuilder->getQuery()->getResult();
    }

    public function getSortiesByNotRegistered($user)
    {

        $em = $this->getEntityManager('s');
        $queryBuilder = $em->createQueryBuilder();

        $queryBuilder->select ('s')
            ->from(Sortie::class, 's')
            ->innerJoin('s.participants',"p")
            ->innerJoin("s.organisateur", "o")
            ->where('p.id != :id')
            ->andWhere("o.id != :id")
            ->setParameter("id", $user);

        return $queryBuilder->getQuery()->getResult();
    }

}
